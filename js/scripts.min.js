const mapboxURL="https://api.mapbox.com/styles/v1/{id}/tiles/{z}/{x}/{y}?access_token={accessToken}",year=(new Date).getFullYear(),gidArray=[],geoidArray=[],selectedLayerGroup=L.featureGroup({pane:"pointsPane"}),mbLight=L.tileLayer(mapboxURL,{id:"mapbox/light-v10",tileSize:512,maxZoom:18,zoomOffset:-1,accessToken:accessToken}),mbStreets=L.tileLayer(mapboxURL,{id:"mapbox/streets-v11",tileSize:512,maxZoom:18,zoomOffset:-1,accessToken:accessToken}),ntaCSA=L.geoJSON(null,{style:myStyle.csaChoro,onEachFeature:onEachNTAFeature,filter:feature=>!["park-cemetery-etc","Airport"].some(str=>feature.properties.neighborhood.includes(str)),pane:"polygonsPane"}),ntaImpervious=L.geoJSON(null,{style:myStyle.impervChoro,onEachFeature:onEachNTAFeature,filter:feature=>!["park-cemetery-etc","Airport"].some(str=>feature.properties.neighborhood.includes(str)),pane:"polygonsPane"}),ntaLayerGroup=L.featureGroup([ntaCSA,ntaImpervious]),plants=L.geoJSON(null,{pointToLayer:(feature,latlng)=>L.marker(latlng,{icon:tpIcon}),onEachFeature:onEachTP,filter:feature=>null!==feature.properties.wpcp}),outfalls=L.geoJSON(null,{pointToLayer:(feature,latlng)=>L.circleMarker(latlng,myStyle.outfalls),interactive:!1}),interceptors=L.geoJSON(null,{style:myStyle.interceptors,pane:"linesPane",interactive:!1}),sewersheds=L.geoJSON(null,{style:myStyle.sewersheds,onEachFeature:onEachSewershed,filter:feature=>!["NA","UNKNOWN"].some(str=>feature.properties.sewershed.includes(str)),pane:"polygonsPane"}),sewerAreas=L.geoJSON(null,{style:myStyle.sewerAreas,onEachFeature:onEachSewerArea,pane:"polygonsPane"}),giConstructed=L.geoJSON(null),giInConstruction=L.geoJSON(null),giPlanning=L.geoJSON(null),giClustersCon=L.markerClusterGroup({maxClusterRadius:50,singleMarkerMode:!0}),giClustersInCon=L.markerClusterGroup({maxClusterRadius:50,singleMarkerMode:!0}),giClustersPlan=L.markerClusterGroup({maxClusterRadius:50,singleMarkerMode:!0}),giClusters=L.markerClusterGroup({maxClusterRadius:50,singleMarkerMode:!0}),callsFlooding=L.geoJSON(null),callsOdor=L.geoJSON(null),callsClustersFlood=L.markerClusterGroup({maxClusterRadius:50,singleMarkerMode:!0}),callsClustersOdor=L.markerClusterGroup({maxClusterRadius:50,singleMarkerMode:!0}),drawnItems=new L.FeatureGroup,myMap=L.map("mapid",{center:[40.71,-73.93],zoom:11,layers:[mbLight,ntaCSA,plants,interceptors,drawnItems],zoomControl:!1,maxBounds:L.latLngBounds(L.latLng(40.43,-74.7),L.latLng(40.98,-73.1)),minZoom:10,fullscreenControl:{pseudoFullscreen:!0},attributionControl:!1,tap:!1}),defaultBounds=myMap.getBounds(),legend=L.control({position:"bottomleft"});legend.onAdd=map=>{let grades,colorFunc,title;const div=L.DomUtil.create("div","info legend unselectable");map.hasLayer(ntaCSA)?(grades=[0,.072,.273,.554,.739,.861,.948],colorFunc=myStyle.getChoroColorCSA,title='<h6 class="font-weight-bold">Combined Sewer <br> Areas Percentage</h6>'):(grades=[0,.368,.487,.581,.67,.756,.829],colorFunc=myStyle.getChoroColorImperv,title='<h6 class="font-weight-bold">Impervious Surfaces <br> Percentage</h6>');let html=[title],labels=[];for(let i=0;i<grades.length;i++)labels.push(`&ensp;<svg style="background: ${colorFunc(grades[i]+.01)}; width: 1.5em; height: 1.5em"></svg>&emsp;${(100*grades[i]).toFixed(1)}%`+(grades[i+1]?"&ndash;"+(100*(grades[i+1]-.001)).toFixed(1)+"%":"&ndash;100%"));return html.push(labels.join("<br>")),div.innerHTML=html.join(""),div},legend.addTo(myMap),myMap.createPane("polygonsPane"),myMap.createPane("linesPane"),myMap.createPane("pointsPane");const groupedOverlays={Neighborhoods:{"CSA Percentage":ntaCSA,"Impervious Percentage":ntaImpervious},"Green Infrastructures":{Constructed:giClustersCon,"In Construction":giClustersInCon,Designed:giClustersPlan},"311 Sewer Calls":{"Clogged/Flooding":callsClustersFlood,"Sewer Odor":callsClustersOdor},"Other Layers":{"WW Treatment Plants":plants,"CSO Outfalls":outfalls,"Sewer Interceptors":interceptors,"Sewer Area Types":sewerAreas,Sewersheds:sewersheds}},overlayOptions={exclusiveGroups:["Neighborhoods"]},baseMaps={Grayscale:mbLight,Streets:mbStreets},layerControls=L.control.groupedLayers(baseMaps,groupedOverlays,overlayOptions).addTo(myMap);$.getJSON("https://raw.githubusercontent.com/allan-lu/js/main/data/nyc-sewers-wgs84.geojson",data=>{ntaCSA.addData(data),ntaImpervious.addData(data),data.features.filter(e=>{const neighborhoods=e.properties.neighborhood.split(/-(?![a-z])|,\s*/);return!["cemetery-etc-park","park-cemetery-etc","Airport"].some(str=>neighborhoods.includes(str))}).map(e=>{const properties=e.properties,neighborhoods=properties.neighborhood.split(/-(?![a-z])|,\s*/),bounds=L.geoJSON(e).getBounds();return neighborhoods.map(el=>{const obj={};return obj[el]=properties,obj[el].bounds=bounds,obj})}).flat().sort((a,b)=>Object.keys(a)[0]<Object.keys(b)[0]?-1:1).forEach(e=>{const neighborhood=Object.keys(e)[0],properties=Object.values(e)[0],bounds=properties.bounds;$("#nbhd-list").append($("<li>").addClass(["col","list-group-item","list-group-item-action","p-1","unselectable"]).text(neighborhood).attr({gid:properties.gid,title:"Select a neighborhood"}).data({properties:properties,bounds:bounds}))}),$("#nbhd-list").children(".list-group-item").on({mouseenter:e=>{$(e.target).css("cursor","pointer")},click:e=>{const feature=$(e.target).data(),gid=feature.properties.gid,bounds=feature.bounds,padding=[90,40];selectAndZoom(feature.properties,gid,bounds,padding,!1)}})}),$.getJSON("https://raw.githubusercontent.com/allan-lu/js/main/data/nyc-treatmentplant-wgs84.geojson",data=>{plants.addData(data)}),$.getJSON("https://raw.githubusercontent.com/allan-lu/js/main/data/nyc-outfalls-wgs84.geojson",data=>{outfalls.addData(data)}),$.getJSON("https://raw.githubusercontent.com/allan-lu/js/main/data/nyc-sewerinterceptors-wgs84.geojson",data=>{interceptors.addData(data)}),$.getJSON("https://raw.githubusercontent.com/allan-lu/js/main/data/nyc-sewersheds-wgs84.geojson",data=>{sewersheds.addData(data)}),$.getJSON("https://raw.githubusercontent.com/allan-lu/js/main/data/nyc-sewerareas-wgs84.geojson",data=>{sewerAreas.addData(data)}),$.getJSON("https://data.cityofnewyork.us/resource/uyfj-5xid.geojson?$where=status_gro = 'Constructed' AND the_geom is not null&$limit=25000",data=>{giConstructed.addData(data),giClustersCon.addLayer(giConstructed)}),$.getJSON("https://data.cityofnewyork.us/resource/uyfj-5xid.geojson?$where=status_gro = 'In Construction' AND the_geom is not null&$limit=25000",data=>{giInConstruction.addData(data),giClustersInCon.addLayer(giInConstruction)}),$.getJSON("https://data.cityofnewyork.us/resource/uyfj-5xid.geojson?$where=status_gro = 'Final Design' AND the_geom is not null&$limit=25000",data=>{giPlanning.addData(data),giClustersPlan.addLayer(giPlanning)}),$.getJSON(`https://data.cityofnewyork.us/resource/erm2-nwe9.geojson?$where=date_extract_y(created_date)=${year-1} AND complaint_type in ('Indoor Sewage', 'Industrial Waste', 'Sewer') AND (descriptor like '%25IDG)' OR descriptor like '%25SC)' OR descriptor like '%25SA1)' OR descriptor like '%25SA)' OR descriptor like '%25SJ)') AND location is not null&$limit=25000`,data=>{callsFlooding.addData(data),callsClustersFlood.addLayer(callsFlooding)}),$.getJSON(`https://data.cityofnewyork.us/resource/erm2-nwe9.geojson?$where=date_extract_y(created_date)=${year-1} AND complaint_type in ('Indoor Sewage', 'Industrial Waste', 'Sewer') AND (descriptor like '%25SA2)' OR descriptor like '%25ICB)') AND location is not null&$limit=5000`,data=>{callsOdor.addData(data),callsClustersOdor.addLayer(callsOdor)});const zoomHome=L.Control.zoomHome();zoomHome.addTo(myMap);const searchControl=new L.Control.Search({layer:ntaCSA,propertyName:"neighborhood",marker:!1,initial:!1,autoCollapse:!0,textPlaceholder:"Neighborhood..."});myMap.addControl(searchControl),searchControl.on({"search:locationfound":e=>{const target=e.layer,properties=target.feature.properties,gid=properties.gid,bounds=target.getBounds();gidArray.includes(gid)?zoomToBounds(bounds,[90,40]):selectAndZoom(properties,gid,bounds,[90,40])}}),$("div.leaflet-control-search.leaflet-control").addClass("leaflet-bar"),$(".leaflet-control-search .search-button").css("cssText","background: none !important; border-bottom: none;").attr("role","button").addClass("leaflet-bar-part"),$(".leaflet-control-search .search-button").append($("<i>").addClass(["fas","fa-search","fa-lg"]).css({color:"black"})),$(".leaflet-control-search .search-cancel").css("cssText","background: none !important; border-bottom: none; margin: 0px; display: none;"),$(".leaflet-control-search .search-cancel").append($("<i>").addClass(["far","fa-times-circle","fa-md"]).css({color:"gray"}));const sidebar=L.control.sidebar({autopan:!0,closeButton:!0,container:"sidebar",position:"right"}).addTo(myMap);$("#sidebar").addClass("d-lg-none"),$(".leaflet-control-container .leaflet-right").addClass("on-right");const drawOptions={position:"topright",draw:{polyline:!1,polygon:{allowIntersection:!1,drawError:{color:"gray",message:"Error! Shape edges cannot cross!"},shapeOptions:{color:"red"}},rectangle:{shapeOptions:{color:"red"}},circle:{shapeOptions:{color:"red"},showRadius:!0},marker:!1,circlemarker:!1},edit:{featureGroup:drawnItems}};L.drawLocal.draw.toolbar.buttons.polygon="Polygon select",L.drawLocal.draw.toolbar.buttons.rectangle="Rectangle select",L.drawLocal.draw.toolbar.buttons.circle="Circle select",L.drawLocal.edit.toolbar.buttons.edit="Edit selector polygon",L.drawLocal.edit.toolbar.buttons.editDisabled="No selector polygon to edit",L.drawLocal.edit.toolbar.buttons.remove="Clear selection",L.drawLocal.edit.toolbar.buttons.removeDisabled="No polygons selectedd",L.EditToolbar.Delete.include({enable:()=>{clearNTAs(),zoomToBounds(defaultBounds)}});const drawControl=new L.Control.Draw(drawOptions).addTo(myMap);myMap.on({overlayadd:layer=>{myMap.addControl(legend)},fullscreenchange:()=>{myMap.isFullscreen()?($("#sidebar").removeClass("d-lg-none"),$(".leaflet-control-container .leaflet-right").removeClass("on-right")):(sidebar.close(),$("#sidebar").addClass("d-lg-none"),$(".leaflet-control-container .leaflet-right").addClass("on-right"))},"draw:toolbaropened":()=>{ntaCSA.eachLayer(layer=>{layer.off()})},"draw:toolbarclosed":()=>{ntaCSA.eachLayer(layer=>{onEachNTAFeature(null,layer)})},"draw:created":e=>{const layer=e.layer;selectMultiple(layer)},"draw:edited":e=>{const layer=e.layers.getLayers()[0];void 0!==layer&&selectMultiple(layer)}}),$(document).ready(()=>{$(".leaflet-sidebar-tabs li a").click(e=>{const href=void 0!==$(e.target).attr("href")?$(e.target).attr("href").split("-")[0].concat("-p"):$(e.target).parent().attr("href").split("-")[0].concat("-p");$(".nav-tabs a").removeClass("active"),$(".tab-content div").removeClass(["show","active"]),$(`.nav-tabs a[href="${href}"]`).addClass("active"),$(href).addClass(["show","active"])})});